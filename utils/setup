#!/bin/bash
#script to automatically download libraries and configure microSWIFT
#takes float ID as an argument
#takes git username and email as arguments


#ask user for input and stores as variables
read -p "Enter the three digit microSWIFT floatID: " floatID
read -p "Enter the UTC military time in HH:MM:SS format: " date 
read -p "Enter the current date in format YYYY-MM-DD. Remember to account for UTC timechange: " time
read -p "Enter your Github username: " username
read -p "Enter your Github email: " useremail


#set time and date so that pi will be able to use the internet and github etc
sudo timedatectl set-time $time
sudo timedatectl set-time $date


#download python libraries
echo "Downloading python libraries"
sudo apt-get install build-essential python-dev python-smbus python-pip
sudo pip3 install adafruit-mcp3008
sudo pip3 install adafruit-mcp3008
sudo pip3 install Adafruit-GPIO
sudo pip3 install spidev
sudo pip3 install pynmea2
sudo pip3 install adafruit-blinka
sudo pip3 install adafruit-circuitpython-busdevice
sudo pip3 install git+git://github.com/chrisb2/pi_ina219.git 


#remove extraneous programs
echo "Removing extraneous programs"
sudo apt purge -y libreoffice*
sudo apt purge -y wolfram-engine minecraft-pi sonic
sudo apt -y clean
sudo apt -y autoremove


#log in to git
echo "Pulling latest build from Github"
git config --global user.name "$username"
git config --global user.email $useremail


#pull latest from git
cd /home/pi/microSWIFT
git reset --hard
git checkout main
git pull


#change Raspberry Pi's Config.txt file
file1=/boot/config.txt
#overclock pi
echo "Overclocking pi"
sudo sed -i "s/^\(arm_freq=\).*/\11085/" ${file1}
sudo sed -i "s/^\(gpu_freq=\).*/\1530/" ${file1}
sudo sed -i "s/^\(outer_voltage=\).*/\12/" ${file1}
sudo sed -i "s/^\(core_freq=\).*/\1515/" ${file1}
sudo sed -i "s/^\(sdram_freq=\).*/\1533/" ${file1}
sudo sed -i "s/^\(outer_voltage_sdram=\).*/\11/" ${file1}


#enable i2c and spi
echo "Enabling I2C and SPI"
sudo sed -i "s/^\(i2c_arm=\).*/\1on/" ${file1}
sudo sed -i "s/^\(spi=\).*/\1on/" ${file1}


#Edit SSH Config file"
echo "Changing SSH Config file to allow for send data script to run at boot"
file2=/etc/ssh/ssh_config
#searches for line in file and adds if not present"
grep -qF "Host *" "${file2}" || echo "Host *" | sudo tee --append "${file2}"
grep -qF "StrictHostKeyChecking no" "${file2}" || echo "StrictHostKeyChecking no" | sudo tee --append "${file2}"
grep -qF "UserKnownHostsFile=/dev/null" "${file2}" || echo "UserKnownHostsFile=/dev/null" | sudo tee --append "${file2}"
grep -qF "IPQoS cs0 cs0" "${file2}" || echo "IPQoS cs0 cs0" | sudo tee --append "${file2}"


#configure Config.dat
echo "Changing Config.dat with floatID"
file3=/home/pi/microSWIFT/utils/Config.dat
/bin/sed -i "s/^\(floatID=\).*/\1${floatID}/" ${file3}


#setup static IP address with floatID
cd /etc/
file4=dhcpcd.conf
echo "Setting up static IP address with floatID"
#remove leading zeros of floatID so that the static IP will stick
IPfloatID=$(echo $floatID | sed 's/0*//')
echo "IPfloatID $IPfloatID"
echo "FloatID $floatID"
#search for commented out lines that need to be changed
sudo sed -i '/^#.*interface wlan0/s/^#//' ${file4}
sudo sed -i '/^#.*static ip_address/s/^#//' ${file4}
sudo sed -i '/^#.*static routers/s/^#//' ${file4}
sudo sed -i '/^#.*static domain_name_servers/s/^#//' ${file4}
#replace static IP address using floatID as last three digits of the address
sudo sed -i "s/^\(static ip_address=\).*/\1192.168.0.$IPfloatID\/24/" ${file4}
echo "The new static IP address is 192.168.0.$IPfloatID/24"
sudo sed -i "s/^\(static routers=\).*/\1192.168.0.1/" ${file4}
sudo sed -i "s/^\(static domain_name_servers=\).*/\1192.168.0.1/" ${file4}


#set up hostname
echo "Setting up hostname"
CUR_HOSTNAME=$(cat /etc/hostname)
NEW_HOSTNAME=microSWIFT$floatID
sudo hostnamectl set-hostname $NEW_HOSTNAME
sudo hostname $NEW_HOSTNAME
sudo sed -i "s/$CUR_HOSTNAME/$NEW_HOSTNAME/g" /etc/hosts
sudo sed -i "s/$CUR_HOSTNAME/$NEW_HOSTNAME/g" /etc/hostname
echo "Hostname changed to $NEW_HOSTNAME"


#changes user to boot into console auto-login
echo "Changing graphical interface to console autologin"
sudo systemctl set-default multi-user.target


#if already in console then will exit and reboot
echo "Rebooting"
sudo reboot


#make executable
chmod u+x /home/pi/microSWIFT/utils/setup
